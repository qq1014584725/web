# Generated by Django 2.0 on 2018-12-26 03:22

from django.db import migrations, models
import django.db.models.deletion
import myapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alltarget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('targetname', models.CharField(max_length=30, verbose_name='大指标名称')),
                ('isstudentself', models.BooleanField(default=True, verbose_name='学生自评')),
                ('isstudenttostudent', models.BooleanField(default=True, verbose_name='学生互评')),
                ('isteachertostudent', models.BooleanField(default=True, verbose_name='教师评价')),
                ('iszhuanjiatostudnet', models.BooleanField(default=True, verbose_name='专家评价')),
                ('isbusinesstostudnet', models.BooleanField(default=True, verbose_name='企业评价')),
                ('weight', models.CharField(max_length=30, verbose_name='各级权重')),
            ],
            options={
                'verbose_name': '大指标',
                'verbose_name_plural': '综合大指标',
                'db_table': 'myapp_Alltarget',
            },
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Bid', models.CharField(max_length=50)),
                ('Bname', models.CharField(max_length=50, verbose_name='姓名')),
                ('Bpassword', models.CharField(max_length=50, verbose_name='密码')),
            ],
        ),
        migrations.CreateModel(
            name='BusinesstoStudentFactors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(verbose_name='权重')),
            ],
        ),
        migrations.CreateModel(
            name='BusinesstoStudentScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(null=True, verbose_name='分数')),
                ('self', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Business', verbose_name='单位名称')),
            ],
        ),
        migrations.CreateModel(
            name='Factors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factorname', models.CharField(max_length=30, verbose_name='因素名称')),
            ],
            options={
                'verbose_name': '综合培养因素',
                'verbose_name_plural': '综合培养因素管理',
                'db_table': 'myApp_Factors',
            },
        ),
        migrations.CreateModel(
            name='Postgraduates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Pid', models.CharField(max_length=50, verbose_name='学号')),
                ('Pname', models.CharField(max_length=50, verbose_name='姓名')),
                ('Ppassword', models.CharField(max_length=50, verbose_name='密码')),
                ('Pgender', models.BooleanField(default=True, verbose_name='性别')),
                ('Pgrade', models.IntegerField(verbose_name='年级')),
                ('Pdegree', models.CharField(max_length=50, verbose_name='专业学位')),
                ('Pexperience', models.CharField(max_length=50, verbose_name='工作经历')),
            ],
            options={
                'verbose_name': '学生',
                'verbose_name_plural': '学生用户管理',
                'db_table': 'myapp_Postgraduates',
            },
        ),
        migrations.CreateModel(
            name='PostgraduatesHomework',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Phomework', models.FileField(upload_to=myapp.models.upload_to2)),
                ('student_id', models.CharField(max_length=25)),
                ('name', models.CharField(max_length=50)),
                ('postgraduates', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Postgraduates')),
            ],
        ),
        migrations.CreateModel(
            name='PostgraduatesTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Ptest', models.FileField(upload_to=myapp.models.upload_to1)),
                ('student_id', models.CharField(max_length=25)),
                ('name', models.CharField(max_length=50)),
                ('postgraduates', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Postgraduates')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFactorsvalue1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factorsvalue', models.CharField(max_length=30, verbose_name='评价')),
            ],
            options={
                'verbose_name': '一级因素评分',
                'verbose_name_plural': '一级因素评分',
                'db_table': 'myapp_StudentFactorsvalue1',
            },
        ),
        migrations.CreateModel(
            name='StudentFactorsvalue2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factorsvalue', models.CharField(max_length=30, verbose_name='评价')),
            ],
            options={
                'verbose_name': '二级因素评分',
                'verbose_name_plural': '二级因素评分',
                'db_table': 'myapp_StudentFactorsvalue2',
            },
        ),
        migrations.CreateModel(
            name='StudentFactorsvalue3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factorsvalue', models.CharField(max_length=30, verbose_name='评价')),
            ],
            options={
                'verbose_name': '三级因素评分',
                'verbose_name_plural': '三级因素评分',
                'db_table': 'myapp_StudentFactorsvalue3',
            },
        ),
        migrations.CreateModel(
            name='StudentselfAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(null=True, verbose_name='小指标分数')),
                ('postgraduates', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Postgraduates')),
            ],
            options={
                'verbose_name': '学生自评分数',
                'verbose_name_plural': '学生自评分数',
                'db_table': 'myapp_StudentselfAccess',
            },
        ),
        migrations.CreateModel(
            name='StudentselfAccessFactors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(verbose_name='权重')),
            ],
        ),
        migrations.CreateModel(
            name='StudenttoStudentFactors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(verbose_name='权重')),
            ],
        ),
        migrations.CreateModel(
            name='StudenttoStudentScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(null=True, verbose_name='分数')),
                ('self', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='myapp.Postgraduates', verbose_name='用户名称')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student', to='myapp.Postgraduates', verbose_name='学生名称')),
                ('targetname', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.StudenttoStudentFactors', verbose_name='指标名称')),
            ],
        ),
        migrations.CreateModel(
            name='Sub1Factors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factorname', models.CharField(max_length=30, verbose_name='一级因素名称')),
                ('isvalue', models.BooleanField(default=False)),
                ('value', models.CharField(max_length=30, null=True, verbose_name='选项值')),
                ('factors', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.Factors', verbose_name='所属因素')),
            ],
            options={
                'verbose_name': '一级综合因素',
                'verbose_name_plural': '一级综合因素管理',
                'db_table': 'myApp_Sub1Factors',
            },
        ),
        migrations.CreateModel(
            name='Sub2Factors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factorname', models.CharField(max_length=30, verbose_name='二级因素名称')),
                ('isvalue', models.BooleanField(default=False)),
                ('value', models.CharField(max_length=30, null=True, verbose_name='选项值')),
                ('factors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Sub1Factors', verbose_name='所属因素')),
            ],
            options={
                'verbose_name': '二级综合因素',
                'verbose_name_plural': '二级综合因素管理',
                'db_table': 'myapp_Sub2Factors',
            },
        ),
        migrations.CreateModel(
            name='Sub3Factors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factorname', models.CharField(max_length=30, verbose_name='三级因素名称')),
                ('isvalue', models.BooleanField(default=False)),
                ('value', models.CharField(max_length=30, null=True, verbose_name='选项值')),
                ('factors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Sub2Factors', verbose_name='所属因素')),
            ],
            options={
                'verbose_name': '三级综合因素',
                'verbose_name_plural': '三级综合因素管理',
                'db_table': 'myapp_Sub3Factors',
            },
        ),
        migrations.CreateModel(
            name='Subtarget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('targetname', models.CharField(max_length=30, verbose_name='小指标名称')),
                ('targetexplain', models.CharField(max_length=50, verbose_name='指标说明')),
                ('alltarget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Alltarget', verbose_name='大指标名称')),
            ],
            options={
                'verbose_name': '小指标',
                'verbose_name_plural': '综合小指标',
                'db_table': 'myapp_Subtarget',
            },
        ),
        migrations.CreateModel(
            name='TeacherAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score1', models.IntegerField(null=True, verbose_name='分数1')),
                ('score2', models.IntegerField(null=True, verbose_name='分数2')),
                ('targetname', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Subtarget', verbose_name='小指标')),
            ],
            options={
                'verbose_name': '教师评分',
                'verbose_name_plural': '教师评分',
                'db_table': 'myapp_TeacherAccess',
            },
        ),
        migrations.CreateModel(
            name='Teachers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Tid', models.CharField(max_length=50)),
                ('Tname', models.CharField(max_length=50, verbose_name='姓名')),
                ('Tweight', models.FloatField(verbose_name='权重')),
                ('Tpassword', models.CharField(max_length=50, verbose_name='密码')),
            ],
            options={
                'verbose_name': '教师',
                'verbose_name_plural': '教师用户管理',
                'db_table': 'myapp_Teachers',
            },
        ),
        migrations.CreateModel(
            name='TeachertoStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(null=True, verbose_name='分数')),
                ('postgraduates', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Postgraduates', verbose_name='学生名称')),
            ],
            options={
                'verbose_name': '教师对学生评分管理',
                'verbose_name_plural': '教师对学生评分管理',
                'db_table': 'myapp_TeachertoStudent',
            },
        ),
        migrations.CreateModel(
            name='TeachertoStudentFactors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(verbose_name='权重')),
                ('targetname', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myapp.Subtarget', verbose_name='教师评价指标')),
            ],
        ),
        migrations.CreateModel(
            name='Zhuanjia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Zid', models.CharField(max_length=50)),
                ('Zname', models.CharField(max_length=50, verbose_name='姓名')),
                ('Zpassword', models.CharField(max_length=50, verbose_name='密码')),
            ],
        ),
        migrations.CreateModel(
            name='ZhuanjiatoStudentFactors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(verbose_name='权重')),
                ('targetname', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myapp.Subtarget', verbose_name='专家评价指标')),
            ],
        ),
        migrations.CreateModel(
            name='ZhuanjiatoStudentScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(null=True, verbose_name='分数')),
                ('self', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Zhuanjia', verbose_name='专家名称')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Postgraduates', verbose_name='学生名称')),
                ('targetname', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.ZhuanjiatoStudentFactors', verbose_name='指标名称')),
            ],
        ),
        migrations.AddField(
            model_name='teachertostudent',
            name='targetname',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.TeachertoStudentFactors', verbose_name='指标名称'),
        ),
        migrations.AddField(
            model_name='teachertostudent',
            name='teahcers',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Teachers', verbose_name='教师名称'),
        ),
        migrations.AddField(
            model_name='teacheraccess',
            name='teahcers',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Teachers'),
        ),
        migrations.AddField(
            model_name='studenttostudentfactors',
            name='targetname',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myapp.Subtarget', verbose_name='学生互评指标'),
        ),
        migrations.AddField(
            model_name='studentselfaccessfactors',
            name='targetname',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myapp.Subtarget', verbose_name='学生自评指标'),
        ),
        migrations.AddField(
            model_name='studentselfaccess',
            name='targetname',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.StudentselfAccessFactors', verbose_name='所属小指标'),
        ),
        migrations.AddField(
            model_name='studentfactorsvalue3',
            name='factorsattribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Sub3Factors', verbose_name='所属因素'),
        ),
        migrations.AddField(
            model_name='studentfactorsvalue3',
            name='postgraduates',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Postgraduates'),
        ),
        migrations.AddField(
            model_name='studentfactorsvalue2',
            name='factorsattribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Sub2Factors', verbose_name='所属因素'),
        ),
        migrations.AddField(
            model_name='studentfactorsvalue2',
            name='postgraduates',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Postgraduates'),
        ),
        migrations.AddField(
            model_name='studentfactorsvalue1',
            name='factorsattribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Sub1Factors', verbose_name='所属因素'),
        ),
        migrations.AddField(
            model_name='studentfactorsvalue1',
            name='postgraduates',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Postgraduates'),
        ),
        migrations.AddField(
            model_name='businesstostudentscore',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Postgraduates', verbose_name='学生名称'),
        ),
        migrations.AddField(
            model_name='businesstostudentscore',
            name='targetname',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.BusinesstoStudentScore', verbose_name='指标名称'),
        ),
        migrations.AddField(
            model_name='businesstostudentfactors',
            name='targetname',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myapp.Subtarget', verbose_name='单位评价指标'),
        ),
    ]
