# Generated by Django 2.0 on 2018-11-21 03:09

from django.db import migrations, models
import django.db.models.deletion
import myApp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdaptAbility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ExpressAbility', models.IntegerField()),
                ('RemberAbility', models.IntegerField()),
                ('InteractAbility', models.IntegerField()),
                ('Selflearning', models.IntegerField()),
                ('LogicAbility', models.IntegerField()),
                ('SystemMind', models.IntegerField()),
                ('ConcentrateAbility', models.IntegerField()),
                ('AdaptDiverse', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CultivateFactors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CoursePractice', models.CharField(choices=[('一般', '一般'), ('满意', '满意'), ('较差', '较差')], max_length=5)),
                ('E_IndustryDynamics', models.CharField(choices=[('从来没有', '从来没有'), ('经常', '经常'), ('偶尔', '偶尔')], max_length=10)),
                ('E_PracticeCombine', models.CharField(choices=[('从来没有', '从来没有'), ('经常', '经常'), ('偶尔', '偶尔')], max_length=10)),
                ('E_UseingCase', models.CharField(choices=[('从来没有', '从来没有'), ('经常', '经常'), ('偶尔', '偶尔')], max_length=10)),
                ('E_DifferentActivity', models.CharField(choices=[('从来没有', '从来没有'), ('经常', '经常'), ('偶尔', '偶尔')], max_length=10)),
                ('F_IndustryDynamics', models.CharField(choices=[('从来没有', '从来没有'), ('经常', '经常'), ('偶尔', '偶尔')], max_length=10)),
                ('F_PracticeCombine', models.CharField(choices=[('从来没有', '从来没有'), ('经常', '经常'), ('偶尔', '偶尔')], max_length=10)),
                ('F_UseingCase', models.CharField(choices=[('从来没有', '从来没有'), ('经常', '经常'), ('偶尔', '偶尔')], max_length=10)),
                ('F_DifferentActivity', models.CharField(choices=[('从来没有', '从来没有'), ('经常', '经常'), ('偶尔', '偶尔')], max_length=10)),
                ('F_TraditionClass', models.CharField(choices=[('从来没有', '从来没有'), ('经常', '经常'), ('偶尔', '偶尔')], max_length=10)),
                ('F_CourseEffect', models.CharField(choices=[('一般', '一般'), ('没有效果', '没有效果'), ('很好', '很好')], max_length=10)),
                ('I_TeacherDirect', models.CharField(choices=[('一般', '一般'), ('没有效果', '没有效果'), ('很好', '很好')], max_length=10)),
                ('O_TeacherDirect', models.CharField(choices=[('一般', '一般'), ('没有效果', '没有效果'), ('很好', '很好')], max_length=10)),
                ('I_TeacherAbility', models.CharField(choices=[('一般', '一般'), ('没有效果', '没有效果'), ('很好', '很好')], max_length=10)),
                ('O_TeacherAbility', models.CharField(choices=[('一般', '一般'), ('没有效果', '没有效果'), ('很好', '很好')], max_length=10)),
                ('ThesisCombinePractice', models.CharField(choices=[('没有联系', '没有联系'), ('联系一般', '联系一般'), ('联系紧密', '联系紧密')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='InnovateAbility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IndependMind', models.IntegerField()),
                ('ProblemFind', models.IntegerField()),
                ('PredictAbility', models.IntegerField()),
                ('KnowledgeMigrate', models.IntegerField()),
                ('MindExpand', models.IntegerField()),
                ('Remind', models.IntegerField()),
                ('React', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='LogAbility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PreceptionAbility', models.IntegerField()),
                ('ObserveAbility', models.IntegerField()),
                ('AssessAbility', models.IntegerField()),
                ('EnterpriseAbility', models.IntegerField()),
                ('TheoryUnderstand', models.IntegerField()),
                ('MessageDeal', models.IntegerField()),
                ('PositiveEffect', models.IntegerField()),
                ('KnowladgeCombine', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Postgraduates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Pid', models.CharField(max_length=50)),
                ('Pname', models.CharField(max_length=50)),
                ('Ppassword', models.CharField(max_length=50)),
                ('Pgender', models.BooleanField(default=True)),
                ('Pgrade', models.IntegerField()),
                ('Pdegree', models.CharField(max_length=50)),
                ('Pexperience', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PostgraduatesHomework',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Phomework', models.FileField(upload_to=myApp.models.upload_to2)),
                ('student_id', models.CharField(max_length=25)),
                ('name', models.CharField(max_length=50)),
                ('postgraduates', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.Postgraduates')),
            ],
        ),
        migrations.CreateModel(
            name='PostgraduatesTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Ptest', models.FileField(upload_to=myApp.models.upload_to1)),
                ('student_id', models.CharField(max_length=25)),
                ('name', models.CharField(max_length=50)),
                ('postgraduates', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.Postgraduates')),
            ],
        ),
        migrations.CreateModel(
            name='ProfessAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ExpressAbility1', models.IntegerField()),
                ('ExpressAbility2', models.IntegerField()),
                ('RemberAbility1', models.IntegerField()),
                ('RemberAbility2', models.IntegerField()),
                ('InteractAbility1', models.IntegerField()),
                ('InteractAbility2', models.IntegerField()),
                ('Selflearning1', models.IntegerField()),
                ('Selflearning2', models.IntegerField()),
                ('LogicAbility1', models.IntegerField()),
                ('LogicAbility2', models.IntegerField()),
                ('SystemMind1', models.IntegerField()),
                ('SystemMind2', models.IntegerField()),
                ('ConcentrateAbility1', models.IntegerField()),
                ('ConcentrateAbility2', models.IntegerField()),
                ('AdaptDiverse1', models.IntegerField()),
                ('AdaptDiverse2', models.IntegerField()),
                ('IndependMind1', models.IntegerField()),
                ('IndependMind2', models.IntegerField()),
                ('ProblemFind1', models.IntegerField()),
                ('ProblemFind2', models.IntegerField()),
                ('PredictAbility1', models.IntegerField()),
                ('PredictAbility2', models.IntegerField()),
                ('KnowledgeMigrate1', models.IntegerField()),
                ('KnowledgeMigrate2', models.IntegerField()),
                ('MindExpand1', models.IntegerField()),
                ('MindExpand2', models.IntegerField()),
                ('Remind1', models.IntegerField()),
                ('Remind2', models.IntegerField()),
                ('React1', models.IntegerField()),
                ('React2', models.IntegerField()),
                ('InterpersonAbility1', models.IntegerField()),
                ('InterpersonAbility2', models.IntegerField()),
                ('ProblemReduce1', models.IntegerField()),
                ('ProblemReduce2', models.IntegerField()),
                ('ProblemDeal1', models.IntegerField()),
                ('ProblemDeal2', models.IntegerField()),
                ('KnowladgeChange1', models.IntegerField()),
                ('KnowladgeChange2', models.IntegerField()),
                ('TeamCooperation1', models.IntegerField()),
                ('TeamCooperation2', models.IntegerField()),
                ('ExcuteAbility1', models.IntegerField()),
                ('ExcuteAbility2', models.IntegerField()),
                ('OrganizeAbility1', models.IntegerField()),
                ('OrganizeAbility2', models.IntegerField()),
                ('ExperienceTransform1', models.IntegerField()),
                ('ExperienceTransform2', models.IntegerField()),
                ('ProfessSkill1', models.IntegerField()),
                ('ProfessSkill2', models.IntegerField()),
                ('PlanAbility1', models.IntegerField()),
                ('PlanAbility2', models.IntegerField()),
                ('PressAbility1', models.IntegerField()),
                ('PressAbility2', models.IntegerField()),
                ('BenefitCoordinate1', models.IntegerField()),
                ('BenefitCoordinate2', models.IntegerField()),
                ('PreceptionAbility1', models.IntegerField()),
                ('PreceptionAbility2', models.IntegerField()),
                ('ObserveAbility1', models.IntegerField()),
                ('ObserveAbility2', models.IntegerField()),
                ('AssessAbility1', models.IntegerField()),
                ('AssessAbility2', models.IntegerField()),
                ('EnterpriseAbility1', models.IntegerField()),
                ('EnterpriseAbility2', models.IntegerField()),
                ('TheoryUnderstand1', models.IntegerField()),
                ('TheoryUnderstand2', models.IntegerField()),
                ('MessageDeal1', models.IntegerField()),
                ('MessageDeal2', models.IntegerField()),
                ('PositiveEffect1', models.IntegerField()),
                ('PositiveEffect2', models.IntegerField()),
                ('KnowladgeCombine1', models.IntegerField()),
                ('KnowladgeCombine2', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ProfessPracticeFactor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PracticeBeginTime', models.CharField(max_length=50)),
                ('ContinueTime', models.CharField(max_length=50)),
                ('ActivityFrequency', models.CharField(choices=[('从来没有', '从来没有'), ('经常', '经常'), ('偶尔', '偶尔')], max_length=10)),
                ('ActivityContent', models.CharField(choices=[('内容系统性一般', '内容系统性一般'), ('没有系统性', '没有系统性'), ('内容系统性较好', '内容系统性较好')], max_length=10)),
                ('ActivitySatisfy', models.CharField(choices=[('一般', '一般'), ('满意', '满意'), ('较差', '较差')], max_length=10)),
                ('ActivityEffect', models.CharField(choices=[('一般', '一般'), ('没有效果', '没有效果'), ('很好', '很好')], max_length=10)),
                ('postgraduates', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myApp.Postgraduates')),
            ],
        ),
        migrations.CreateModel(
            name='ProfessScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ExpressAbility', models.IntegerField()),
                ('RemberAbility', models.IntegerField()),
                ('InteractAbility', models.IntegerField()),
                ('Selflearning', models.IntegerField()),
                ('LogicAbility', models.IntegerField()),
                ('SystemMind', models.IntegerField()),
                ('ConcentrateAbility', models.IntegerField()),
                ('AdaptDiverse', models.IntegerField()),
                ('IndependMind', models.IntegerField()),
                ('ProblemFind', models.IntegerField()),
                ('PredictAbility', models.IntegerField()),
                ('KnowledgeMigrate', models.IntegerField()),
                ('MindExpand', models.IntegerField()),
                ('Remind', models.IntegerField()),
                ('React', models.IntegerField()),
                ('InterpersonAbility', models.IntegerField()),
                ('ProblemReduce', models.IntegerField()),
                ('ProblemDeal', models.IntegerField()),
                ('KnowladgeChange', models.IntegerField()),
                ('TeamCooperation', models.IntegerField()),
                ('ExcuteAbility', models.IntegerField()),
                ('OrganizeAbility', models.IntegerField()),
                ('ExperienceTransform', models.IntegerField()),
                ('ProfessSkill', models.IntegerField()),
                ('PlanAbility', models.IntegerField()),
                ('PressAbility', models.IntegerField()),
                ('BenefitCoordinate', models.IntegerField()),
                ('PreceptionAbility', models.IntegerField()),
                ('ObserveAbility', models.IntegerField()),
                ('AssessAbility', models.IntegerField()),
                ('EnterpriseAbility', models.IntegerField()),
                ('TheoryUnderstand', models.IntegerField()),
                ('MessageDeal', models.IntegerField()),
                ('PositiveEffect', models.IntegerField()),
                ('KnowladgeCombine', models.IntegerField()),
                ('postgraduates', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.Postgraduates')),
            ],
        ),
        migrations.CreateModel(
            name='Teachers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Tid', models.CharField(max_length=50)),
                ('Tname', models.CharField(max_length=50)),
                ('Tweight', models.FloatField()),
                ('Tpassword', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='WorkAbility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('InterpersonAbility', models.IntegerField()),
                ('ProblemReduce', models.IntegerField()),
                ('ProblemDeal', models.IntegerField()),
                ('KnowladgeChange', models.IntegerField()),
                ('TeamCooperation', models.IntegerField()),
                ('ExcuteAbility', models.IntegerField()),
                ('OrganizeAbility', models.IntegerField()),
                ('ExperienceTransform', models.IntegerField()),
                ('ProfessSkill', models.IntegerField()),
                ('PlanAbility', models.IntegerField()),
                ('PressAbility', models.IntegerField()),
                ('BenefitCoordinate', models.IntegerField()),
                ('postgraduates', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myApp.Postgraduates')),
            ],
        ),
        migrations.AddField(
            model_name='professscore',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.Teachers'),
        ),
        migrations.AddField(
            model_name='professaccess',
            name='teacher',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myApp.Teachers'),
        ),
        migrations.AddField(
            model_name='logability',
            name='postgraduates',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myApp.Postgraduates'),
        ),
        migrations.AddField(
            model_name='innovateability',
            name='postgraduates',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myApp.Postgraduates'),
        ),
        migrations.AddField(
            model_name='cultivatefactors',
            name='postgraduates',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myApp.Postgraduates'),
        ),
        migrations.AddField(
            model_name='adaptability',
            name='postgraduates',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myApp.Postgraduates'),
        ),
    ]
